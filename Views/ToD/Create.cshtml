@model LinkshellManager.ViewModels.TodManagerViewModel

<main id="main" class="main">
    <div class="pagetitle d-flex justify-content-center py-4">
        <h2>Add ToD</h2>
    </div>
    <section class="submit-tod">
        <div class="submit-tod-row d-flex justify-content-center pt-5">
            <div class="col-lg-6 tod-container">
                <div class="card">
                    <div class="card-body">
                        <h3 class="my-4 text-center">Submit ToD</h3>
                        <form asp-action="Create" method="post">
                            <!-- Linkshell selection -->
                            <div class="row mb-3">
                                <label asp-for="Tod.LinkshellId" class="col-sm-2 col-form-label">Linkshell</label>
                                <div class="col-sm-10">
                                    <select asp-for="Tod.LinkshellId" class="form-select" id="linkshell-select"
                                        required>
                                        <option value="@Model.LinkshellId">Select Linkshell</option>
                                        @foreach (var linkshell in Model.Linkshells)
                                        {
                                            <option value="@linkshell.Id" selected="@(linkshell.Id == Model.LinkshellId ? "selected" : null)">
                                                @linkshell.LinkshellName
                                            </option>
                                        }
                                    </select>
                                    <div class="invalid-feedback">Please select a linkshell!</div>
                                </div>
                            </div>
                            <div class="row mb-3">
                                <label asp-for="Tod.MonsterName" class="col-sm-2 col-form-label">Name</label>
                                <div class="col-sm-10">
                                    <select asp-for="Tod.MonsterName" class="form-select" required>
                                        <option value="" selected disabled>Select Monster Name</option>
                                        <option value="Fafnir">Fafnir</option>
                                        <option value="Nidhogg">Nidhogg</option>
                                        <option value="Behemoth">Behemoth</option>
                                        <option value="King Behemoth">King Behemoth</option>
                                        <option value="Adamantoise">Adamantoise</option>
                                        <option value="Aspidochelone">Aspidochelone</option>
                                        <option value="Tiamat">Tiamat</option>
                                        <option value="Jormungand">Jormungand</option>
                                        <option value="Vrtra">Vrtra</option>
                                        <option value="King Arthro">King Arthro</option>
                                        <option value="Simurgh">Simurgh</option>
                                    </select>
                                </div>
                            </div>
                            <div class="row mb-3" id="day-number-row">
                                <label asp-for="Tod.DayNumber" class="col-sm-2 col-form-label">Day Number</label>
                                <div class="col-sm-10">
                                    <input asp-for="Tod.DayNumber" class="form-control" type="number" />
                                    <span asp-validation-for="Tod.DayNumber" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="row mb-3">
                                <label asp-for="Tod.Claim" class="col-sm-2 col-form-label">Claim</label>
                                <div class="col-sm-10">
                                    <select asp-for="Tod.Claim" class="form-select" id="claim-select">
                                        <option value="true">Yes</option>
                                        <option value="false">No</option>
                                    </select>
                                </div>
                            </div>
                            <div class="row mb-3">
                                <label asp-for="Tod.Time" class="col-sm-2 col-form-label">ToD</label>
                                <div class="col-sm-10">
                                    <input asp-for="Tod.Time" type="datetime-local" class="form-control" step="1"
                                        id="tod-time">
                                </div>
                            </div>
                            <div class="row mb-3">
                                <label asp-for="Tod.Cooldown" class="col-sm-2 col-form-label">Cooldown</label>
                                <div class="col-sm-10">
                                    <select asp-for="Tod.Cooldown" class="form-select" id="cooldown">
                                        <option value="22 Hour">22 Hour</option>
                                        <option value="72 Hour">72 Hour</option>
                                    </select>
                                </div>
                            </div>
                            <div class="row mb-3">
                                <label asp-for="Tod.RepopTime" class="col-sm-2 col-form-label">Repop Time</label>
                                <div class="col-sm-10">
                                    <input asp-for="Tod.RepopTime" type="datetime-local" class="form-control" step="1"
                                        id="repop-time">
                                </div>
                            </div>
                            <div class="row mb-3">
                                <label asp-for="Tod.Interval" class="col-sm-2 col-form-label">Interval</label>
                                <div class="col-sm-10">
                                    <select asp-for="Tod.Interval" class="form-select" id="interval">
                                        <option value="1 Hour">1 Hour</option>
                                        <option value="10 Min">10 Min</option>
                                    </select>
                                </div>
                            </div>

                            <!-- Loot Details -->
                            <div class="my-5" id="loot-details-container" style="display: none;">
                                <h4 class="text-center mb-4">Loot Details</h4>
                                <div class="loot-detail">
                                    <div class="row mb-3">
                                        <label for="itemName" class="col-sm-2 col-form-label">Item Name</label>
                                        <div class="col-sm-10">
                                            <input type="text" class="form-control" name="TodLootDetails[0].ItemName" />
                                        </div>
                                    </div>
                                    <div class="row mb-3">
                                        <label for="itemWinner" class="col-sm-2 col-form-label">Item Winner</label>
                                        <div class="col-sm-10">
                                            <select class="form-select" name="TodLootDetails[0].ItemWinner"
                                                id="item-winner-select">
                                                <option value="">Select Item Winner</option>
                                            </select>
                                        </div>
                                    </div>
                                    <div class="row mb-3">
                                        <label for="winningDkpSpent" class="col-sm-2 col-form-label">DKP Spent</label>
                                        <div class="col-sm-10">
                                            <input type="number" class="form-control"
                                                name="TodLootDetails[0].WinningDkpSpent" />
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <input type="hidden" name="NoLoot" id="no-loot" value="false" />

                            <div class="d-flex justify-content-between">
                                <div>
                                    <button type="button" class="btn btn-primary" id="add-loot-detail"
                                        style="display: none;">Add Loot</button>
                                </div>
                                <div>
                                    <button type="button" class="btn btn-danger" id="remove-loot-detail"
                                        style="display: none;">Remove Loot</button>
                                </div>
                                <div>
                                    <button type="button" class="btn btn-warning" id="no-loot-button"
                                        style="display: none;">No Loot</button>
                                </div>
                                <div>
                                    <button type="submit" class="btn btn-success">Submit</button>
                                </div>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </section>
</main><!-- End #main -->

<script>



    document.addEventListener('DOMContentLoaded', function () {
        const itemWinnerSelect = document.getElementById('item-winner-select');

        // Fetch character names and populate the dropdown
        fetch('/Tod/GetCharacterNames')
            .then(response => response.json())
            .then(data => {
                data.forEach(name => {
                    const option = document.createElement('option');
                    option.value = name;
                    option.text = name;
                    itemWinnerSelect.appendChild(option);
                });
            });

        const todTimeInput = document.getElementById('tod-time');
        const repopTimeInput = document.getElementById('repop-time');
        const monsterNameInput = document.querySelector('[name="Tod.MonsterName"]');
        const cooldownInput = document.getElementById('cooldown');
        const intervalInput = document.getElementById('interval');
        const dayNumberRow = document.getElementById('day-number-row');
        const claimSelect = document.querySelector('select[name="Tod.Claim"]');
        const lootDetailsContainer = document.getElementById('loot-details-container');
        const addLootDetailButton = document.getElementById('add-loot-detail');
        const removeLootDetailButton = document.getElementById('remove-loot-detail');
        const noLootButton = document.getElementById('no-loot-button');
        const noLootInput = document.getElementById('no-loot');

        function updateRepopTime() {
            const todTime = new Date(todTimeInput.value);
            if (!isNaN(todTime.getTime())) {
                let hoursToAdd = 22;
                const monsterName = monsterNameInput.value;

                if (monsterName === "Tiamat" || monsterName === "Jormungand" || monsterName === "Vrtra") {
                    hoursToAdd = 72;
                    cooldownInput.value = "72 Hour";
                    intervalInput.value = "1 Hour";
                    dayNumberRow.style.display = "none";
                } else if (monsterName === "King Behemoth" || monsterName === "Aspidochelone" || monsterName === "Nidhogg") {
                    hoursToAdd = 22;
                    cooldownInput.value = "22 Hour";
                    intervalInput.value = "10 Min";
                    dayNumberRow.style.display = "none";
                } else {
                    cooldownInput.value = "22 Hour";
                    intervalInput.value = "10 Min";
                    dayNumberRow.style.display = "flex";
                }

                const repopTime = new Date(todTime.getTime() + hoursToAdd * 60 * 60 * 1000);

                // Adjust for timezone offset
                const timezoneOffset = todTime.getTimezoneOffset() * 60 * 1000;
                const adjustedRepopTime = new Date(repopTime.getTime() - timezoneOffset);

                repopTimeInput.value = adjustedRepopTime.toISOString().slice(0, 16);
            }
        }

        function updateFields() {
            const monsterName = monsterNameInput.value;

            if (monsterName === "Tiamat" || monsterName === "Jormungand" || monsterName === "Vrtra") {
                cooldownInput.value = "72 Hour";
                intervalInput.value = "1 Hour";
                dayNumberRow.style.display = "none";
            } else if (monsterName === "King Behemoth" || monsterName === "Aspidochelone" || monsterName === "Nidhogg") {
                cooldownInput.value = "22 Hour";
                intervalInput.value = "10 Min";
                dayNumberRow.style.display = "none";
            } else {
                cooldownInput.value = "22 Hour";
                intervalInput.value = "10 Min";
                dayNumberRow.style.display = "flex";
            }
        }

        function toggleLootDetails() {
            if (claimSelect.value === "true") {
                lootDetailsContainer.style.display = 'block';
                addLootDetailButton.style.display = 'block';
                removeLootDetailButton.style.display = 'block';
                noLootButton.style.display = 'block';
            } else {
                lootDetailsContainer.style.display = 'none';
                addLootDetailButton.style.display = 'none';
                removeLootDetailButton.style.display = 'none';
                noLootButton.style.display = 'none';
                // Remove all loot detail elements
                const lootDetails = document.querySelectorAll('.loot-detail');
                lootDetails.forEach(detail => detail.remove());
                lootDetailIndex = 1; // Reset the index
                noLootInput.value = 'false';
            }
        }

        todTimeInput.addEventListener('change', updateRepopTime);
        monsterNameInput.addEventListener('change', function () {
            updateFields();
            updateRepopTime();
        });
        claimSelect.addEventListener('change', toggleLootDetails);

        // Initial call to set the correct state
        updateFields();
        toggleLootDetails();

        let lootDetailIndex = 1;

        addLootDetailButton.addEventListener('click', function () {
            const lootDetailDiv = document.createElement('div');
            lootDetailDiv.classList.add('loot-detail');
            lootDetailDiv.innerHTML = `
                <div class="row mb-3">
                    <label for="itemName" class="col-sm-2 col-form-label">Item Name</label>
                    <div class="col-sm-10">
                        <input type="text" class="form-control" name="TodLootDetails[${lootDetailIndex}].ItemName" required />
                    </div>
                </div>
                <div class="row mb-3">
                    <label for="itemWinner" class="col-sm-2 col-form-label">Item Winner</label>
                    <div class="col-sm-10">
                        <input type="text" class="form-control" name="TodLootDetails[${lootDetailIndex}].ItemWinner" required />
                    </div>
                </div>
                <div class="row mb-3">
                    <label for="winningDkpSpent" class="col-sm-2 col-form-label">DKP Spent</label>
                    <div class="col-sm-10">
                        <input type="number" class="form-control" name="TodLootDetails[${lootDetailIndex}].WinningDkpSpent" required />
                    </div>
                </div>
            `;
            lootDetailsContainer.appendChild(lootDetailDiv);
            lootDetailIndex++;
        });

        removeLootDetailButton.addEventListener('click', function () {
            const lootDetails = document.querySelectorAll('.loot-detail');
            if (lootDetails.length > 0) {
                lootDetails[lootDetails.length - 1].remove();
                lootDetailIndex--;
            }
        });

        noLootButton.addEventListener('click', function () {
            lootDetailsContainer.style.display = 'none';
            addLootDetailButton.style.display = 'none';
            removeLootDetailButton.style.display = 'none';
            noLootButton.style.display = 'none';
            noLootInput.value = 'true';
        });
    });
</script>